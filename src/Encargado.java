
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ana
 */
public class Encargado extends javax.swing.JFrame implements Observer {

    private double precioCestas;
    private double precioPan;
    
    private int nSimples;
    private int nCompuestos;
    private int simplesVendidos;
    private int compuestosVendidos;
    
    public String mensajeSimples;
    public String mensajeCompuestos;
    
    /**
     * Creates new form Supervisor_panel
     */
    public Encargado() {
        initComponents();
        nSimples = 0;
        nCompuestos = 0;
        simplesVendidos = 0;
        compuestosVendidos = 0;
        mensajeSimples = "NADA";
        mensajeCompuestos = "NADA";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        simples = new java.awt.Label();
        compuestos = new java.awt.Label();
        label1 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        simples.setText(mensajeSimples);

        compuestos.setText(mensajeCompuestos);

        label1.setText("Stock de la panaderia");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(compuestos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                    .addComponent(simples, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(simples, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(compuestos, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Encargado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Encargado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Encargado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Encargado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Encargado().setVisible(true);
            }
        });
    }
        @Override
    public void update(Observable o, Object arg){
        //Se le avisa de los productos disponibles en la tienda y los que ya se han vendido
        try {
            Thread.sleep(500);
        } catch (InterruptedException ex){
            //Logger.getLogger()
        }

        // Panaderia panaderia = (Panaderia) o;
        ArrayList<Integer> datos = (ArrayList<Integer>) arg;

        nSimples = datos.get(0);
        nCompuestos = datos.get(1);
        simplesVendidos = datos.get(2);
        compuestosVendidos = datos.get(3);

        this.mensajeSimples = "El número de panes en stock es " + nSimples + " y ya se han vendido " + simplesVendidos;
        this.mensajeCompuestos = "El número de cestas en stock es " + nCompuestos + " y ya se han vendido " + compuestosVendidos;
        
        simples.setText(mensajeSimples);
        compuestos.setText(mensajeCompuestos);
        simples.repaint();
        // titulo_simples.revalidate();
    }


    public String getStock(){
        return ("Supervisor --> " + mensajeSimples + mensajeCompuestos);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label compuestos;
    private java.awt.Label label1;
    private java.awt.Label simples;
    // End of variables declaration//GEN-END:variables
}
